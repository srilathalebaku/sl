class Main {
    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for (int num : nums) sum += num;

        // Correct the condition: target can be negative
        if (Math.abs(target) > sum || (target + sum) % 2 != 0) return 0;

        int subsetSum = (target + sum) / 2;
        return countSubsets(nums, subsetSum);
    }

    private int countSubsets(int[] nums, int sum) {
        int[] dp = new int[sum + 1];
        dp[0] = 1;

        for (int num : nums) {
            for (int j = sum; j >= num; j--) {
                dp[j] += dp[j - num];
            }
        }
        return dp[sum];
    }

    public static void main(String[] args) {
        Main solver = new Main();
        int[] nums = {1, 1, 1, 1, 1};
        int target = 3;
        int ways = solver.findTargetSumWays(nums, target);
        System.out.println("Number of ways to reach target " + target + ": " + ways);
    }
}
